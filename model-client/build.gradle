buildscript {
    ext.kotlinVersion = '1.3.72'
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.multiplatform' version "${kotlinVersion}"
    //id 'org.jetbrains.kotlin.jvm' version "${kotlinVersion}"
    id 'org.jlleitschuh.gradle.ktlint' version "9.3.0"
    id 'com.diffplug.gradle.spotless' version "4.5.1"
}

kotlin {
    jvm()
    //js()

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }

        // Default source set for JVM-specific sources and dependencies.
        // Alternatively, jvmMain { ... } would work as well:
        jvm().compilations.main.defaultSourceSet {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation group: 'org.jetbrains', name: 'annotations', version: '19.0.0'
                implementation group: 'io.vavr', name: 'vavr', version: '0.10.3'
                implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
                implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'
                implementation group: 'log4j', name: 'log4j', version:'1.2.17'
                implementation group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.31'
                implementation group: 'commons-io', name: 'commons-io', version: '2.7'
                implementation group: 'org.json', name: 'json', version: '20200518'
                implementation group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
                implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
            }
        }
        // JVM-specific tests and their dependencies:
        jvm().compilations.test.defaultSourceSet {
            dependencies {
                implementation kotlin('test-junit')
            }
        }

        //js().compilations.main.defaultSourceSet  { /* ... */ }
        //js().compilations.test.defaultSourceSet { /* ... */ }
    }
}

configurations {
    ktlint
}

dependencies {
    ktlint "com.pinterest:ktlint:0.37.2"
}

ktlint {
    disabledRules = ["no-wildcard-imports"]
}

check.dependsOn ktlintCheck

group 'org.modelix'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlinVersion
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

spotless {
    kotlin {
        licenseHeader '/*\n' +
                ' * Licensed under the Apache License, Version 2.0 (the "License");\n' +
                ' * you may not use this file except in compliance with the License.\n' +
                ' * You may obtain a copy of the License at\n' +
                ' *\n' +
                ' *  http://www.apache.org/licenses/LICENSE-2.0\n' +
                ' *\n' +
                ' * Unless required by applicable law or agreed to in writing,\n' +
                ' * software distributed under the License is distributed on an\n' +
                ' * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n' +
                ' * KIND, either express or implied.  See the License for the\n' +
                ' * specific language governing permissions and limitations\n' +
                ' * under the License. \n' +
                ' */\n' +
                '\n'
    }
}
